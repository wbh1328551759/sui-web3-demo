import { TransactionBlock, Connection, JsonRpcProvider } from '@mysten/sui.js';
import {useWallet, ConnectButton } from '@suiet/wallet-kit'
import BigNumber from 'bignumber.js'
import { ethers } from 'ethers';

export const SUI_DEFAULT_SINGER = '0x3fec9fbe3f0fab212cabbd70bdb180d78a03fb8cadb3b32737ea71911440b2fb' // 我的地址

export const SUI_DEFAULT_GAS_OBJECTID = '0xac471cf06c33b00fd539671ff5831ea46fca7c470ca401d74e92ab1493c51f62' //我的地址下的一个object


export const SUI_TESTNET_NODE_URL = 'https://testnet.suiet.app'

const textToBytes = (text: string): number[] | string => {
  if (!text) return text
  return Array.from(
    Uint8Array.from(
      Buffer.from(
        text,
        'utf8'
      )
    )
  )
}
export const formatV8Arg = (val: string) => {
  if (!val) return
  try { // hex
    const uint8Array = ethers.utils.arrayify(val)
    return Array.from(uint8Array)
    // const newBytes = new Uint8Array(uint8Array.length)
    // newBytes.set([uint8Array.length], 0)
    // newBytes.set(uint8Array)
    // return newBytes
  } catch (e) {
    console.error('formatV8Arg error: ', e)
  }
}

export default function Home() {
  const { signAndExecuteTransactionBlock, allAvailableWallets } = useWallet()
  console.log('allAvailableWallets', allAvailableWallets)

  const handleMint = async () => {
    const suiProvider = new JsonRpcProvider(new Connection({ fullnode: 'https://fullnode.testnet.vincagame.com:443' }));

    const tx = new TransactionBlock()
    // tx.setGasBudget(100000000)
    const [coin1, coin2] = tx.splitCoins(tx.gas, [
      tx.pure(BigInt(new BigNumber(0.03).multipliedBy(Math.pow(10, 9)).toString())),
      tx.pure(BigInt(new BigNumber(0.03).multipliedBy(Math.pow(10, 9)).toString())),
    ])


    tx.moveCall({
      target: '0xf1d4ee4b3a2787cd066180857fa0170ccd721c28e20d5f334f48d585ed367284::suicat::mint',
      arguments: [
        tx.pure('0x5055e205e2a783376ad64e1d49ae87409ac171e4d9c8d3ade32fc74cb0d112c0'),
        tx.pure('0x6'),
        tx.makeMoveVec({ objects: [coin1, coin2] }),
      ],
      typeArguments: [],
    })
    const res = await suiProvider.devInspectTransactionBlock({
      transactionBlock: tx,
      sender: '0x57052aa443706c3492f7214495f59a2ec71efcf50241b3023ce4278eab1dad30'
    })
    console.log('res', res)
    const result = await signAndExecuteTransactionBlock({
      //@ts-ignore
      transactionBlock: tx,
      options: { showEffects: true },
    })
    console.log('result', result?.effects?.status?.status)
  }

  const handleTest = async () => {
    const suiProvider = new JsonRpcProvider(new Connection({ fullnode: 'https://wallet-rpc.mainnet.sui.io' }));

    const tx = new TransactionBlock()
    // tx.setGasBudget(100000000)
    const [coin1] = tx.splitCoins(tx.gas, [
      tx.pure(BigInt(new BigNumber(4).multipliedBy(Math.pow(10, 9)).toString())),
    ])
    const so_data = '0x0x0000000000000020cfd05b54c8ad2a4e3a67cef37a77c28b00000000645e2264030d4c6e5987c11800000000000000140e40519af01985208114ffac4441b9b13218572f0015000000000000004e3078356434623330323530363634356333376666313333623938633462353061356165313438343136353937333864366437333364353964306432313761393362663a3a636f696e3a3a434f494e00030000000000000014000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000186a0'

    const src = ''

    const wormhole = '0x000400000000000000000000000000000000000000000000000000000000e8754700000000000000000000000000000000000000000000000000000000004591d3f400000000000000142967e7bb9daa5711ac332caf874bd47ef99b3820'

    const dist = '0x0000000000000001000000000000001410ed43c718714eb63d5aa57b78b54704e256024e000000000000001410ed43c718714eb63d5aa57b78b54704e256024e0000000000000014b04906e95ab5d797ada81508115611fee694c2b3000000000000001400000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000014418cbafe5000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000012629b93b45f000000000000000000000000000000000000000000000000000000000000000a00000000000000000000000002967e7bb9daa5711ac332caf874bd47ef99b382000000000000000000000000000000000000000000000000000000000645f73e40000000000000000000000000000000000000000000000000000000000000004000000000000000000000000b04906e95ab5d797ada81508115611fee694c2b3000000000000000000000000e9e7cea3dedca5984780bafc599bd69add087d56000000000000000000000000070a08beef8d36734dd67a491202ff35a6a16d97000000000000000000000000bb4cdb9cbd36b01bd1cbaebf2de08d9173bc095c'
    //
    console.log('111', formatV8Arg(so_data))
    // console.log('111cccc', ([0,0,0,0,0,0,0,32,119,123,22,191,44,193,40,135,100,102,133,72,114,216,232,43,0,0,0,0,100,92,211,126,3,248,68,113,112,32,94,27,0,0,0,0,0,0,0,20,14,157,102,167,0,140,163,154,231,89,86,154,209,233,17,210,149,71,232,146,0,21,0,0,0,0,0,0,0,78,48,120,52,100,56,57,50,99,101,99,99,100,49,52,57,55,98,57,98,101,55,55,48,49,101,48,57,100,53,49,99,53,56,48,98,99,56,51,102,50,50,99,57,99,57,55,48,53,48,56,50,49,98,51,55,51,97,55,55,100,48,100,57,97,57,101,58,58,117,115,100,116,58,58,85,83,68,84,117,51,0,0,0,0,0,0,0,20,108,110,205,235,255,232,215,234,220,89,195,93,130,227,147,9,52,171,212,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,66,64])?.join(''))
    // // console.log('11122222', [0,0,0,0,0,0,0,32,52,165,202,69,123,130,103,28,233,198,46,203,9,85,64,166,140,180,134,182,103,136,155,198,90,2,51,54,93,224,165,142,0,0,0,0,0,0,0,20,45,167,227,167,242,28,206,121,239,235,102,243,176,130,25,110,160,168,185,175,0,21,0,0,0,0,0,0,0,78,48,120,52,100,56,57,50,99,101,99,99,100,49,52,57,55,98,57,98,101,55,55,48,49,101,48,57,100,53,49,99,53,56,48,98,99,56,51,102,50,50,99,57,99,57,55,48,53,48,56,50,49,98,51,55,51,97,55,55,100,48,100,57,97,57,101,58,58,117,115,100,116,58,58,85,83,68,84,117,51,0,0,0,0,0,0,0,20,108,110,205,235,255,232,215,234,220,89,195,93,130,227,147,9,52,171,212,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,66,64])
    // console.log('222', (formatV8Arg(src) as any))
    // console.log('222cccc', ([0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,32,247,116,254,221,28,35,181,19,33,88,202,17,54,198,43,76,133,245,18,170,127,122,78,149,46,240,90,243,12,39,5,93,0,0,0,0,0,0,0,32,247,116,254,221,28,35,181,19,33,88,202,17,54,198,43,76,133,245,18,170,127,122,78,149,46,240,90,243,12,39,5,93,0,0,0,0,0,0,0,76,52,100,56,57,50,99,101,99,99,100,49,52,57,55,98,57,98,101,55,55,48,49,101,48,57,100,53,49,99,53,56,48,98,99,56,51,102,50,50,99,57,99,57,55,48,53,48,56,50,49,98,51,55,51,97,55,55,100,48,100,57,97,57,101,58,58,117,115,100,116,58,58,85,83,68,84,0,0,0,0,0,0,0,76,52,100,56,57,50,99,101,99,99,100,49,52,57,55,98,57,98,101,55,55,48,49,101,48,57,100,53,49,99,53,56,48,98,99,56,51,102,50,50,99,57,99,57,55,48,53,48,56,50,49,98,51,55,51,97,55,55,100,48,100,57,97,57,101,58,58,117,115,100,99,58,58,85,83,68,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,66,64,0,0,0,0,0,0,0,12,67,101,116,117,115,44,57,56,51,55,53,55])?.join(''))
    // console.log('22222222', [0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,222,233,0,0,0,0,0,0,0,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,222,233,0,0,0,0,0,0,0,76,52,100,56,57,50,99,101,99,99,100,49,52,57,55,98,57,98,101,55,55,48,49,101,48,57,100,53,49,99,53,56,48,98,99,56,51,102,50,50,99,57,99,57,55,48,53,48,56,50,49,98,51,55,51,97,55,55,100,48,100,57,97,57,101,58,58,117,115,100,116,58,58,85,83,68,84,0,0,0,0,0,0,0,76,52,100,56,57,50,99,101,99,99,100,49,52,57,55,98,57,98,101,55,55,48,49,101,48,57,100,53,49,99,53,56,48,98,99,56,51,102,50,50,99,57,99,57,55,48,53,48,56,50,49,98,51,55,51,97,55,55,100,48,100,57,97,57,101,58,58,117,115,100,99,58,58,85,83,68,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,66,64,0,0,0,0,0,0,0,7,67,101,116,117,115,44,48])
    // console.log('333', (formatV8Arg(wormhole) as any))
    // console.log('333ccc', ([0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,254,238,7,218,27,53,19,189,253,84,64,86,46,150,45,250,172,25,86,111]).join(''))
    // console.log('333222222', [0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,238,107,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,24,239,65,0,0,0,0,0,0,0,20,254,238,7,218,27,53,19,189,253,84,64,86,46,150,45,250,172,25,86,111])
    // console.log('4444', formatV8Arg(dist))
    tx.moveCall({
      target: '0x2990f0ce69e3cc09192eec09bea2c677b8950cc8e40c252bc78d092394b0197e::wormhole_facet::so_swap_without_swap',
      arguments: [
        tx.object('0xaeab97f96cf9877fee2883315d459552b2b921edc16d7ceac6eab944dd88919c'),
        tx.object('0xc57508ee0d4595e5a8728974a4a93a787d38f339757230d441e895422c07aba9'),
        tx.object('0xf00feec4856093bf41a968947da8cb35f91c304a2df4051f11759fbf7fb7abf0'),
        tx.object('0x0000000000000000000000000000000000000000000000000000000000000006'),
        tx.object('0x6c85d499a88237a50d9da06133c9f93e75699602d0b8d035f1dea5f95376dd18'),
        tx.object('0x7f1473487136446d064565294ea445a97c391db1731831eca6ca427802c36a4a'),
        // tx.object('0x43e2925f7c5bed04b612cc66c53a850e280a46704ce12cd2f25420b537e23f9d'),
        // tx.object('0xf774fedd1c23b5132158ca1136c62b4c85f512aa7f7a4e952ef05af30c27055d'),
        tx.pure(formatV8Arg(so_data)),
        // tx.pure([0,0,0,0,0,0,0,32,119,123,22,191,44,193,40,135,100,102,133,72,114,216,232,43,0,0,0,0,100,92,214,102,3,145,136,102,133,227,111,160,0,0,0,0,0,0,0,20,14,157,102,167,0,140,163,154,231,89,86,154,209,233,17,210,149,71,232,146,0,21,0,0,0,0,0,0,0,78,48,120,52,100,56,57,50,99,101,99,99,100,49,52,57,55,98,57,98,101,55,55,48,49,101,48,57,100,53,49,99,53,56,48,98,99,56,51,102,50,50,99,57,99,57,55,48,53,48,56,50,49,98,51,55,51,97,55,55,100,48,100,57,97,57,101,58,58,117,115,100,116,58,58,85,83,68,84,117,51,0,0,0,0,0,0,0,20,108,110,205,235,255,232,215,234,220,89,195,93,130,227,147,9,52,171,212,47,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,66,64]),
        // tx.pure([0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,32,247,116,254,221,28,35,181,19,33,88,202,17,54,198,43,76,133,245,18,170,127,122,78,149,46,240,90,243,12,39,5,93,0,0,0,0,0,0,0,32,247,116,254,221,28,35,181,19,33,88,202,17,54,198,43,76,133,245,18,170,127,122,78,149,46,240,90,243,12,39,5,93,0,0,0,0,0,0,0,76,52,100,56,57,50,99,101,99,99,100,49,52,57,55,98,57,98,101,55,55,48,49,101,48,57,100,53,49,99,53,56,48,98,99,56,51,102,50,50,99,57,99,57,55,48,53,48,56,50,49,98,51,55,51,97,55,55,100,48,100,57,97,57,101,58,58,117,115,100,116,58,58,85,83,68,84,0,0,0,0,0,0,0,76,52,100,56,57,50,99,101,99,99,100,49,52,57,55,98,57,98,101,55,55,48,49,101,48,57,100,53,49,99,53,56,48,98,99,56,51,102,50,50,99,57,99,57,55,48,53,48,56,50,49,98,51,55,51,97,55,55,100,48,100,57,97,57,101,58,58,117,115,100,99,58,58,85,83,68,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,66,64,0,0,0,0,0,0,0,12,67,101,116,117,115,44,57,56,51,55,53,55]),
        // tx.pure([0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,6,220,66,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,208,81,9,147,0,0,0,0,0,0,0,20,254,238,7,218,27,53,19,189,253,84,64,86,46,150,45,250,172,25,86,111]),
        // tx.pure([0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,238,107,40,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,64,24,239,65,0,0,0,0,0,0,0,20,254,238,7,218,27,53,19,189,253,84,64,86,46,150,45,250,172,25,86,111]),
        tx.pure([]),
        // tx.pure(formatV8Arg(src)),
        // tx.pure([]),
        // tx.pure([0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,32,247,116,254,221,28,35,181,19,33,88,202,17,54,198,43,76,133,245,18,170,127,122,78,149,46,240,90,243,12,39,5,93,0,0,0,0,0,0,0,32,247,116,254,221,28,35,181,19,33,88,202,17,54,198,43,76,133,245,18,170,127,122,78,149,46,240,90,243,12,39,5,93,0,0,0,0,0,0,0,76,52,100,56,57,50,99,101,99,99,100,49,52,57,55,98,57,98,101,55,55,48,49,101,48,57,100,53,49,99,53,56,48,98,99,56,51,102,50,50,99,57,99,57,55,48,53,48,56,50,49,98,51,55,51,97,55,55,100,48,100,57,97,57,101,58,58,117,115,100,116,58,58,85,83,68,84,0,0,0,0,0,0,0,76,52,100,56,57,50,99,101,99,99,100,49,52,57,55,98,57,98,101,55,55,48,49,101,48,57,100,53,49,99,53,56,48,98,99,56,51,102,50,50,99,57,99,57,55,48,53,48,56,50,49,98,51,55,51,97,55,55,100,48,100,57,97,57,101,58,58,117,115,100,99,58,58,85,83,68,67,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,15,66,64,0,0,0,0,0,0,0,12,67,101,116,117,115,44,57,56,51,55,53,55]),
        tx.pure(formatV8Arg(wormhole)),
        // tx.pure([]),
        // tx.pure([0,4,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,20,254,238,7,218,27,53,19,189,253,84,64,86,46,150,45,250,172,25,86,111]),
        tx.pure(formatV8Arg(dist)),

        tx.makeMoveVec({
          objects: [tx.object('0xa63ebdd83bebd2932c3070685c803d1c73101922eaf0aaee1cb76dd9d6a30c44')]
        }),
        tx.makeMoveVec({ objects: [coin1] })
      ],

      typeArguments: [
        "0x5d4b302506645c37ff133b98c4b50a5ae14841659738d6d733d59d0d217a93bf::coin::COIN",
      ],
    })
    console.log('tx', tx)
    const res = await suiProvider.devInspectTransactionBlock({
      transactionBlock: tx,
      sender: '0x57052aa443706c3492f7214495f59a2ec71efcf50241b3023ce4278eab1dad30'
    })
    console.log('res', res)
    const result = await signAndExecuteTransactionBlock({
      //@ts-ignore
      transactionBlock: tx,
      options: { showEffects: true },
    })
  }

  return (
    <>
      <ConnectButton />
      <div>mint nft: <button onClick={handleMint}>mint</button></div>
      <div>test: <button onClick={handleTest}>mint</button></div>
    </>
  )
}
